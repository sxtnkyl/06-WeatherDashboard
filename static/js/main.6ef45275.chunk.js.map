{"version":3,"sources":["styles/styles.js","util/windowContext.js","api/weatherAPI.jsx","util/helperFuncs.js","components/Navbar/searchBar/index.jsx","images/weatherLogo.png","components/Navbar/index.jsx","components/DisplayBody/singleDay/index.jsx","components/DisplayBody/forecast/dayCard.jsx","components/DisplayBody/forecast/index.jsx","components/DisplayBody/index.jsx","components/App/app.jsx","styles/globalStyles.js","index.jsx"],"names":["BaseButton","styled","button","props","theme","bg","BaseHeader","h2","BaseInput","input","BaseCard","div","Icon","img","NavContainer","nav","SectionContainer","section","FlexContainer","SingleDayContainer","SingleDayCard","ForecastContainer","DayCard","IconContainer","height","width","light","dark","WindowContext","createContext","fetchSingleDay","city","a","axios","url","process","type","then","res","catch","err","console","log","fetchOneCall","lat","long","makeForecastData","forecastObj","returnData","current","forecast","forecastArr","singleDayForecast","name","date","icon","temp","maxTemp","minTemp","windSpd","humidity","uv","currentDay","makeDt","dt","weather","wind_speed","uvi","i","info","daily","newForecast","max","min","push","Date","toLocaleDateString","iconSeverity","code","includes","SearchBar","useContext","local","setLocal","useState","value","setValue","updateSearchedCities","newCitiesArray","searchedCities","handleSubmit","data","coord","lon","oneCall","currentCity","currentCityData","currentCityForecast","onChange","e","target","placeholder","list","onClick","length","Navbar","Searched","map","className","src","logo","SingleDay","imgStr","condition","alt","style","border","Forecast","day","DisplayBody","App","useEffect","prevSearched","JSON","parse","localStorage","getItem","setItem","stringify","useMemo","Provider","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ef45275.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n//General Components\r\nconst BaseButton = styled.button`\r\n  background: ${(props) => props.theme.bg};\r\n  margin: 0px 10px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #ffd580;\r\n  }\r\n`;\r\n\r\nconst BaseHeader = styled.h2`\r\n  padding: 0px 10px;\r\n`;\r\n\r\nconst BaseInput = styled.input`\r\n  margin-right: 10px;\r\n  background: ${(props) => props.theme.bg};\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #ffd580;\r\n  }\r\n`;\r\n\r\nconst BaseCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  background: ${(props) => props.theme.bg};\r\n  border: 2px solid lightgray;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n    0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  height: inherit;\r\n  width: auto;\r\n  padding: 10px;\r\n`;\r\n\r\n//Section containers\r\nconst NavContainer = styled.nav`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\r\n  height: fit-content;\r\n  padding: 20px 0px;\r\n`;\r\n\r\nconst SectionContainer = styled.section`\r\n  margin: 10px;\r\n`;\r\n\r\nconst FlexContainer = styled.div`\r\n  display: flex;\r\n  flex: 0 0 100%;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\n//extended components\r\n\r\nconst SingleDayContainer = styled.div`\r\n  height: 40vh;\r\n`;\r\n\r\nconst SingleDayCard = styled(BaseCard)`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ForecastContainer = styled(FlexContainer)`\r\n  min-height: 30vh;\r\n  padding: 10px;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst DayCard = styled(BaseCard)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst IconContainer = styled(BaseCard)`\r\n  display: flex;\r\n  align-items: center;\r\n  height: ${(props) => props.height};\r\n  width: ${(props) => props.width};\r\n  background: lightgray;\r\n`;\r\n\r\n//default theming example\r\n// BaseCard.defaultProps = {\r\n//   theme: {\r\n//     main: \"green\",\r\n//   },\r\n// };\r\n\r\nconst theme = {\r\n  light: { bg: \"none\" },\r\n  dark: { bg: \"#c7ffddff\" },\r\n};\r\n\r\nexport {\r\n  BaseButton,\r\n  BaseHeader,\r\n  BaseInput,\r\n  BaseCard,\r\n  IconContainer,\r\n  Icon,\r\n  NavContainer,\r\n  SectionContainer,\r\n  SingleDayContainer,\r\n  ForecastContainer,\r\n  FlexContainer,\r\n  SingleDayCard,\r\n  DayCard,\r\n  theme,\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const WindowContext = createContext(null);\r\n","import axios from \"axios\";\r\nexport const testFetch = () => {\r\n  const city = {\r\n    coord: {\r\n      lon: -122.08,\r\n      lat: 37.39,\r\n    },\r\n    weather: [\r\n      {\r\n        id: 800,\r\n        main: \"Clear\",\r\n        description: \"clear sky\",\r\n        icon: \"01d\",\r\n      },\r\n    ],\r\n    base: \"stations\",\r\n    main: {\r\n      temp: 282.55,\r\n      feels_like: 281.86,\r\n      temp_min: 280.37,\r\n      temp_max: 284.26,\r\n      pressure: 1023,\r\n      humidity: 100,\r\n    },\r\n    visibility: 16093,\r\n    wind: {\r\n      speed: 1.5,\r\n      deg: 350,\r\n    },\r\n    clouds: {\r\n      all: 1,\r\n    },\r\n    dt: 1560350645,\r\n    sys: {\r\n      type: 1,\r\n      id: 5122,\r\n      message: 0.0139,\r\n      country: \"US\",\r\n      sunrise: 1560343627,\r\n      sunset: 1560396563,\r\n    },\r\n    timezone: -25200,\r\n    id: 420006353,\r\n    name: \"Mountain View\",\r\n    cod: 200,\r\n  };\r\n  return city;\r\n};\r\n\r\n//use to get lat/long\r\nexport const fetchSingleDay = async (city) => {\r\n  return axios({\r\n    url: `https://${process.env.REACT_APP_WEATHER_BASE_DOMAIN}weather?q=${city}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`,\r\n    type: \"GET\",\r\n  })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const fetchOneCall = async (lat, long) => {\r\n  return axios({\r\n    url: `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&units=imperial&exclude=minutely,hourly,alerts&appid=${process.env.REACT_APP_WEATHER_API_KEY}`,\r\n    type: \"GET\",\r\n  })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return err;\r\n    });\r\n};\r\n","//make forecast data\r\nexport const makeForecastData = (city, forecastObj) => {\r\n  let returnData = {\r\n    current: null,\r\n    forecast: null,\r\n  };\r\n  //returns data.daily[arr of 8]\r\n  //use index 1-5\r\n  let forecastArr = [];\r\n  let singleDayForecast = {\r\n    name: city,\r\n    date: \"get moment\",\r\n    icon: null,\r\n    temp: null,\r\n    maxTemp: null,\r\n    minTemp: null,\r\n    windSpd: null,\r\n    humidity: null,\r\n    uv: null,\r\n  };\r\n\r\n  //make current day\r\n  let currentDay = { ...singleDayForecast };\r\n  currentDay.date = makeDt(forecastObj.current.dt);\r\n  currentDay.icon = forecastObj.current.weather[0].icon;\r\n  currentDay.temp = forecastObj.current.temp;\r\n  currentDay.windSpd = forecastObj.current.wind_speed;\r\n  currentDay.humidity = forecastObj.current.humidity;\r\n  currentDay.uv = forecastObj.current.uvi;\r\n  returnData.current = currentDay;\r\n  //make forecast data for each day, add to forecastArr\r\n  for (let i = 1; i < 6; i++) {\r\n    let info = forecastObj.daily[i];\r\n    let newForecast = { ...singleDayForecast };\r\n    newForecast.date = makeDt(info.dt);\r\n    newForecast.icon = info.weather[0].icon;\r\n    newForecast.maxTemp = info.temp.max;\r\n    newForecast.minTemp = info.temp.min;\r\n    newForecast.windSpd = info.wind_speed;\r\n    newForecast.humidity = info.humidity;\r\n    newForecast.uv = info.uvi;\r\n    forecastArr.push(newForecast);\r\n  }\r\n  returnData.forecast = forecastArr;\r\n\r\n  return returnData;\r\n};\r\n\r\nexport const makeDt = (dt) => {\r\n  var formattedTime = new Date(dt * 1000).toLocaleDateString(\"en-US\");\r\n  return formattedTime;\r\n};\r\n\r\nexport const iconSeverity = (code) => {\r\n  let moderate = [\"09d\"];\r\n  let severe = [\"50d\", \"13d\", \"10d\", \"11d\"];\r\n  return severe.includes(code)\r\n    ? \"red\"\r\n    : moderate.includes(code)\r\n    ? \"yellow\"\r\n    : \"green\";\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { WindowContext } from \"../../../util/windowContext\";\r\nimport { fetchSingleDay, fetchOneCall } from \"../../../api/weatherAPI\";\r\nimport { makeForecastData } from \"../../../util/helperFuncs\";\r\nimport * as S from \"../../../styles/styles\";\r\n\r\nconst SearchBar = () => {\r\n  //TODO: add lazy initial state for localStorage prev searched list\r\n  const { local, setLocal } = useContext(WindowContext);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const updateSearchedCities = (city) => {\r\n    let newCitiesArray = [...local.searchedCities];\r\n    //handle searchedCity dups\r\n    if (!local.searchedCities.includes(city)) newCitiesArray.push(city);\r\n    return newCitiesArray;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    //fetch the things\r\n    //TODO: add error handling/loading hook\r\n    let { data } = await fetchSingleDay(value);\r\n    let oneCall = await fetchOneCall(data.coord.lat, data.coord.lon);\r\n    //org the things\r\n    let forecast = makeForecastData(data.name, oneCall.data);\r\n    //update ctx\r\n    setLocal({\r\n      ...local,\r\n      searchedCities: updateSearchedCities(data.name),\r\n      currentCity: data.name,\r\n      currentCityData: forecast.current,\r\n      currentCityForecast: forecast.forecast,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <S.BaseInput\r\n        type=\"text\"\r\n        onChange={(e) => setValue(e.target.value)}\r\n        value={value}\r\n        placeholder=\"Search for a City\"\r\n        list=\"hist\"\r\n      />\r\n      <S.BaseButton onClick={value.length > 0 && handleSubmit}>\r\n        Search City\r\n      </S.BaseButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","export default __webpack_public_path__ + \"static/media/weatherLogo.4595304d.png\";","import React, { useContext } from \"react\";\r\nimport * as S from \"../../styles/styles\";\r\nimport { WindowContext } from \"../../util/windowContext\";\r\nimport SearchBar from \"./searchBar\";\r\nimport logo from \"../../images/weatherLogo.png\";\r\nimport { fetchSingleDay, fetchOneCall } from \"../../api/weatherAPI\";\r\nimport { makeForecastData } from \"../../util/helperFuncs\";\r\n\r\nconst Navbar = () => {\r\n  const { local, setLocal } = useContext(WindowContext);\r\n\r\n  const handleSubmit = async (city) => {\r\n    //fetch the things\r\n    //TODO: add error handling/loading hook\r\n    let { data } = await fetchSingleDay(city);\r\n    let oneCall = await fetchOneCall(data.coord.lat, data.coord.lon);\r\n    //org the things\r\n    let forecast = makeForecastData(data.name, oneCall.data);\r\n    //update ctx\r\n    setLocal({\r\n      ...local,\r\n      searchedCities: updateSearchedCities(data.name),\r\n      currentCity: data.name,\r\n      currentCityData: forecast.current,\r\n      currentCityForecast: forecast.forecast,\r\n    });\r\n  };\r\n\r\n  const updateSearchedCities = (city) => {\r\n    let newCitiesArray = [...local.searchedCities];\r\n    //handle searchedCity dups\r\n    if (!local.searchedCities.includes(city)) newCitiesArray.push(city);\r\n    return newCitiesArray;\r\n  };\r\n\r\n  const Searched = local.searchedCities.length ? (\r\n    <S.FlexContainer>\r\n      {local.searchedCities.map((city) => (\r\n        <S.BaseButton\r\n          key={city}\r\n          value={city}\r\n          onClick={() => handleSubmit(city)}\r\n        >\r\n          {city}\r\n        </S.BaseButton>\r\n      ))}\r\n    </S.FlexContainer>\r\n  ) : null;\r\n\r\n  return (\r\n    <S.NavContainer className=\"nav-container\">\r\n      <S.IconContainer height=\"50px\" width=\"auto\">\r\n        {local.currentCityData == null ? (\r\n          <S.Icon src={logo} />\r\n        ) : (\r\n          <S.BaseHeader>{local.currentCityData.name}</S.BaseHeader>\r\n        )}\r\n      </S.IconContainer>\r\n      <SearchBar />\r\n      {Searched}\r\n    </S.NavContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from \"react\";\r\nimport { WindowContext } from \"../../../util/windowContext\";\r\nimport { iconSeverity } from \"../../../util/helperFuncs\";\r\nimport * as S from \"../../../styles/styles\";\r\n\r\nconst SingleDay = () => {\r\n  const { local } = useContext(WindowContext);\r\n  let { date, icon, temp, windSpd, humidity, uv } = local.currentCityData;\r\n  let imgStr = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n  let condition = iconSeverity(icon);\r\n\r\n  return (\r\n    <S.SingleDayContainer>\r\n      <S.SingleDayCard>\r\n        <div>{date}</div>\r\n        <img\r\n          src={imgStr}\r\n          alt=\"weather icon\"\r\n          style={{ border: `1px solid ${condition}` }}\r\n        />\r\n        <div>Current Temp: {temp}°F</div>\r\n        <div>Wind Speed: {windSpd}mph</div>\r\n        <div>Humidity: {humidity}%</div>\r\n        <div>UV Index: {uv}</div>\r\n      </S.SingleDayCard>\r\n    </S.SingleDayContainer>\r\n  );\r\n};\r\n\r\nexport default SingleDay;\r\n","import React from \"react\";\r\nimport { iconSeverity } from \"../../../util/helperFuncs\";\r\nimport * as S from \"../../../styles/styles\";\r\n\r\nconst DayCard = ({ data }) => {\r\n  let { date, icon, maxTemp, minTemp, windSpd, humidity, uv } = data;\r\n  let imgStr = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n  let condition = iconSeverity(icon);\r\n\r\n  return (\r\n    <S.DayCard>\r\n      <div>{date}</div>\r\n      <img\r\n        src={imgStr}\r\n        alt=\"weather icon\"\r\n        style={{ border: `1px solid ${condition}` }}\r\n      />\r\n      <div>Hi: {maxTemp}°F</div>\r\n      <div>Low: {minTemp}°F</div>\r\n      <div>Wind Speed: {windSpd}mph</div>\r\n      <div>Humidity: {humidity}%</div>\r\n      <div>UV Index: {uv}</div>\r\n    </S.DayCard>\r\n  );\r\n};\r\n\r\nexport default DayCard;\r\n","import React, { useContext } from \"react\";\r\nimport { WindowContext } from \"../../../util/windowContext\";\r\nimport DayCard from \"./dayCard\";\r\nimport * as S from \"../../../styles/styles\";\r\n\r\nconst Forecast = () => {\r\n  const { local } = useContext(WindowContext);\r\n\r\n  return (\r\n    <S.ForecastContainer>\r\n      {local.currentCityForecast\r\n        ? local.currentCityForecast.map((day, i) => {\r\n            return <DayCard data={day} key={i} />;\r\n          })\r\n        : \"loading forecast data\"}\r\n    </S.ForecastContainer>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import SingleDay from \"./singleDay/index\";\r\nimport Forecast from \"./forecast/index\";\r\nimport * as S from \"../..//styles/styles\";\r\n\r\nconst DisplayBody = () => {\r\n  return (\r\n    <>\r\n      <S.SectionContainer className=\"display-body-container\">\r\n        <SingleDay />\r\n      </S.SectionContainer>\r\n      <S.SectionContainer>\r\n        <Forecast />\r\n      </S.SectionContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayBody;\r\n","import React from \"react\";\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport NavBar from \"../Navbar/index\";\r\nimport DisplayBody from \"../DisplayBody\";\r\nimport { WindowContext } from \"../../util/windowContext\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"../../styles/styles\";\r\n\r\nconst App = () => {\r\n  const [local, setLocal] = useState({\r\n    searchedCities: [],\r\n    currentCity: null,\r\n    currentCityData: null,\r\n    currentCityForecast: null,\r\n  });\r\n\r\n  //updated searched cities from localStorage on load\r\n  useEffect(() => {\r\n    let prevSearched = JSON.parse(localStorage.getItem(\"prevCities\"));\r\n    if (prevSearched !== null)\r\n      setLocal({\r\n        ...local,\r\n        searchedCities: [...prevSearched],\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //TODO: reduce rerenders when prev city is searched > updateCities in searchBar\r\n  useEffect(() => {\r\n    localStorage.setItem(\"prevCities\", JSON.stringify(local.searchedCities));\r\n  }, [local.searchedCities]);\r\n\r\n  //memoize ctx\r\n  const value = useMemo(() => ({ local, setLocal }), [local, setLocal]);\r\n\r\n  return (\r\n    <WindowContext.Provider value={value}>\r\n      <ThemeProvider theme={theme.light}>\r\n        <NavBar />\r\n        {local.currentCity && <DisplayBody />}\r\n      </ThemeProvider>\r\n    </WindowContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n*,\r\n*:before,\r\n*:after {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  background: linear-gradient(129.07deg, #ffd7b3ff 0%, #c7ffddff 100%);\r\n  background-size: cover;\r\n  min-height: 100vh;\r\n}\r\n\r\nbody {\r\n  height: 100%;\r\n  line-height: 1;\r\n  font-family: sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -webkit-overflow-scrolling: auto;\r\n  margin: 0;\r\n}\r\n\r\nbutton, input {\r\n  padding: 10px;\r\n  border: 2px solid lightgray;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n    0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n}\r\n\r\noption {\r\n  background: red;\r\n}\r\n\r\n#root {\r\n  min-height: 100%;\r\n  margin: 0px 10vw;\r\n}\r\n\r\n@media screen and (max-width: 1200px) {\r\n  #root {\r\n    margin: 0px 7vw;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 992px) {\r\n  #root {\r\n    margin: 0px 4vw;\r\n  }\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/app\";\r\nimport GlobalStyle from \"./styles/globalStyles\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}